{"ast":null,"code":"import { ADD_FAVORITE, CLEAN_DETAIL, DELETE_FAVORITE, FILTER_CARDS,\n// GET_CHARACTERS,\nGET_CHARACTER_DETAIL, ORDER_CARDS, RESET_FAVORITES, GET_FAVORITES } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  characterDetail: {},\n  allCharacters: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_FAVORITES:\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case ADD_FAVORITE:\n      return {\n        ...state,\n        myFavorites: [...state.myFavorites, action.payload],\n        allCharacters: [...state.allCharacters, action.payload] //necesitamos dos estados que manejen la misma info para hacer los filtrados sin perder el original\n      };\n\n    case DELETE_FAVORITE:\n      const filtered = state.myFavorites.filter(char => char.id !== action.payload);\n      return {\n        ...state,\n        myFavorites: filtered,\n        allCharacters: filtered\n      };\n    case GET_CHARACTER_DETAIL:\n      return {\n        ...state,\n        characterDetail: action.payload\n      };\n    case CLEAN_DETAIL:\n      return {\n        ...state,\n        characterDetail: {}\n      };\n\n    //********************************************************************************** */\n    case FILTER_CARDS:\n      let allCharsFiltered = [];\n      if (action.payload !== \"Todos\") {\n        allCharsFiltered = state.allCharacters.filter(char => char.gender === action.payload);\n        console.log(\"myFavorites\");\n        console.log(state.myFavorites);\n        console.log(\"characters\");\n        console.log(state.allCharacters);\n        console.log(\"filtrados\");\n        console.log(allCharsFiltered);\n      } else {\n        allCharsFiltered = state.allCharacters;\n      }\n      return {\n        ...state,\n        myFavorites: allCharsFiltered\n      };\n    case RESET_FAVORITES:\n      return {\n        ...state,\n        myFavorites: state.allCharacters\n      };\n    case ORDER_CARDS:\n      return {\n        ...state,\n        myFavorites: action.payload === \"Ascendente\" ? state.myFavorites.sort((a, b) => a.id - b.id) : state.myFavorites.sort((a, b) => b.id - a.id)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAVORITE","CLEAN_DETAIL","DELETE_FAVORITE","FILTER_CARDS","GET_CHARACTER_DETAIL","ORDER_CARDS","RESET_FAVORITES","GET_FAVORITES","initialState","myFavorites","characterDetail","allCharacters","rootReducer","state","action","type","payload","filtered","filter","char","id","allCharsFiltered","gender","console","log","sort","a","b"],"sources":["D:/Full-stack/bootcamp-henry/rick-and-morty/front/src/redux/reducer.js"],"sourcesContent":["import {\r\n  ADD_FAVORITE,\r\n  CLEAN_DETAIL,\r\n  DELETE_FAVORITE,\r\n  FILTER_CARDS,\r\n // GET_CHARACTERS,\r\n  GET_CHARACTER_DETAIL,\r\n  ORDER_CARDS,\r\n  RESET_FAVORITES,\r\n  GET_FAVORITES,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  myFavorites: [],\r\n  characterDetail: {},\r\n  allCharacters: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_FAVORITES:\r\n      return { ...state, myFavorites: action.payload, allCharacters:action.payload };\r\n\r\n    case ADD_FAVORITE:\r\n      return {\r\n        ...state,\r\n        myFavorites: [...state.myFavorites, action.payload],\r\n        allCharacters: [...state.allCharacters, action.payload], //necesitamos dos estados que manejen la misma info para hacer los filtrados sin perder el original\r\n      };\r\n\r\n    case DELETE_FAVORITE:\r\n      const filtered = state.myFavorites.filter(\r\n        (char) => char.id !== action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        myFavorites: filtered,\r\n        allCharacters: filtered,\r\n      };\r\n\r\n    case GET_CHARACTER_DETAIL:\r\n      return { ...state, characterDetail: action.payload };\r\n\r\n    case CLEAN_DETAIL:\r\n      return { ...state, characterDetail: {} };\r\n\r\n    //********************************************************************************** */\r\n    case FILTER_CARDS:\r\n      let allCharsFiltered = [];\r\n      if (action.payload !== \"Todos\") {\r\n        allCharsFiltered = state.allCharacters.filter(\r\n          (char) => char.gender === action.payload\r\n        );        \r\n        console.log(\"myFavorites\")\r\n        console.log(state.myFavorites);\r\n        console.log(\"characters\")\r\n        console.log(state.allCharacters);\r\n        console.log(\"filtrados\");\r\n        console.log(allCharsFiltered)\r\n      } else {\r\n        allCharsFiltered = state.allCharacters;\r\n      }\r\n\r\n      return { ...state, myFavorites: allCharsFiltered };\r\n\r\n\r\n\r\n    case RESET_FAVORITES:\r\n      return {\r\n        ...state,\r\n        myFavorites: state.allCharacters,\r\n      };\r\n\r\n    case ORDER_CARDS:\r\n      return {\r\n        ...state,\r\n        myFavorites:\r\n          action.payload === \"Ascendente\"\r\n            ? state.myFavorites.sort((a, b) => a.id - b.id)\r\n            : state.myFavorites.sort((a, b) => b.id - a.id),\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}