{"ast":null,"code":"import axios from \"axios\";\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\nexport const REMOVE_FAVORITE = \"REMOVE_FAVORITE\";\nexport const GET_CHARACTER_DETAIL = \"GET_CHARACTER_DETAIL\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const GET_FAVORITES = \"GET_FAVORITES\";\nexport const removeFavorite = id => {\n  return {\n    type: REMOVE_FAVORITE,\n    payload: id\n  };\n};\nexport const getCharacterDetail = id => {\n  return async function (dispatch) {\n    const URL_BASE = \"http://localhost:3001\";\n    const response = await axios.get(`${URL_BASE}/detail/${id}`);\n    dispatch({\n      type: GET_CHARACTER_DETAIL,\n      payload: response.data\n    });\n  };\n};\nexport const getFavorites = () => {\n  return async function (dispatch) {\n    const URL_BASE = \"http://localhost:3001\";\n    const response = await axios.get(`${URL_BASE}/rickandmorty/fav`);\n    dispatch({\n      type: GET_FAVORITES,\n      payload: response.data\n    });\n  };\n};\nexport const cleanDetail = () => {\n  return {\n    type: CLEAN_DETAIL\n  };\n};\nexport const orderFavorites = (orden, idUser) => {\n  return async function (dispatch) {\n    try {\n      const data = await axios(`${URL_BASE}/fav/${idUser}`);\n      let favoritos = data.data;\n      if (orden === \"Ascendente\") {\n        favoritos = favoritos.sort(function (x, y) {\n          if (x.id > y.id) return 1;\n          if (x.id < y.id) return -1;\n          return 0;\n        });\n      }\n      if (orden === \"Descendente\") {\n        favoritos = favoritos.sort(function (x, y) {\n          return y.id - x.id;\n        });\n      }\n      dispatch({\n        type: ORDER_FAVORITES,\n        payload: favoritos\n      });\n    } catch (error) {\n      window.alert(\"Oops! An error has happened\");\n    }\n  };\n};","map":{"version":3,"names":["axios","ADD_FAVORITE","REMOVE_FAVORITE","GET_CHARACTER_DETAIL","CLEAN_DETAIL","GET_FAVORITES","removeFavorite","id","type","payload","getCharacterDetail","dispatch","URL_BASE","response","get","data","getFavorites","cleanDetail","orderFavorites","orden","idUser","favoritos","sort","x","y","ORDER_FAVORITES","error","window","alert"],"sources":["D:/bootcamp-henry/rick-and-morty/mi-primer-app/front/src/Redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\r\nexport const REMOVE_FAVORITE = \"REMOVE_FAVORITE\";\r\nexport const GET_CHARACTER_DETAIL = \"GET_CHARACTER_DETAIL\";\r\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\r\nexport const GET_FAVORITES = \"GET_FAVORITES\";\r\n\r\nexport const removeFavorite = (id) => {\r\n  return { type: REMOVE_FAVORITE, payload: id };\r\n};\r\n\r\nexport const getCharacterDetail = (id) => {\r\n  return async function (dispatch) {\r\n    const URL_BASE = \"http://localhost:3001\";\r\n    const response = await axios.get(`${URL_BASE}/detail/${id}`);\r\n    dispatch({ type: GET_CHARACTER_DETAIL, payload: response.data });\r\n  };\r\n};\r\n\r\nexport const getFavorites = () => {\r\n  return async function (dispatch) {\r\n    const URL_BASE = \"http://localhost:3001\";\r\n    const response = await axios.get(`${URL_BASE}/rickandmorty/fav`);\r\n    dispatch({ type: GET_FAVORITES, payload: response.data });\r\n  };\r\n};\r\n\r\nexport const cleanDetail = () => {\r\n  return { type: CLEAN_DETAIL };\r\n};\r\n\r\nexport const orderFavorites = (orden, idUser) => {\r\n  return async function (dispatch) {\r\n    try {\r\n      const data = await axios(`${URL_BASE}/fav/${idUser}`);\r\n      let favoritos = data.data;\r\n\r\n      if (orden === \"Ascendente\") {\r\n        favoritos = favoritos.sort(function (x, y) {\r\n          if (x.id > y.id) return 1;\r\n          if (x.id < y.id) return -1;\r\n          return 0;\r\n        });\r\n      }\r\n      if (orden === \"Descendente\") {\r\n        favoritos = favoritos.sort(function (x, y) {\r\n          return y.id - x.id;\r\n        });\r\n      }\r\n\r\n      dispatch({\r\n        type: ORDER_FAVORITES,\r\n        payload: favoritos,\r\n      });\r\n    } catch (error) {\r\n      window.alert(\"Oops! An error has happened\");\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAE5C,OAAO,MAAMC,cAAc,GAAIC,EAAE,IAAK;EACpC,OAAO;IAAEC,IAAI,EAAEN,eAAe;IAAEO,OAAO,EAAEF;EAAG,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAIH,EAAE,IAAK;EACxC,OAAO,gBAAgBI,QAAQ,EAAE;IAC/B,MAAMC,QAAQ,GAAG,uBAAuB;IACxC,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAEF,QAAS,WAAUL,EAAG,EAAC,CAAC;IAC5DI,QAAQ,CAAC;MAAEH,IAAI,EAAEL,oBAAoB;MAAEM,OAAO,EAAEI,QAAQ,CAACE;IAAK,CAAC,CAAC;EAClE,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO,gBAAgBL,QAAQ,EAAE;IAC/B,MAAMC,QAAQ,GAAG,uBAAuB;IACxC,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAEF,QAAS,mBAAkB,CAAC;IAChED,QAAQ,CAAC;MAAEH,IAAI,EAAEH,aAAa;MAAEI,OAAO,EAAEI,QAAQ,CAACE;IAAK,CAAC,CAAC;EAC3D,CAAC;AACH,CAAC;AAED,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO;IAAET,IAAI,EAAEJ;EAAa,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMc,cAAc,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/C,OAAO,gBAAgBT,QAAQ,EAAE;IAC/B,IAAI;MACF,MAAMI,IAAI,GAAG,MAAMf,KAAK,CAAE,GAAEY,QAAS,QAAOQ,MAAO,EAAC,CAAC;MACrD,IAAIC,SAAS,GAAGN,IAAI,CAACA,IAAI;MAEzB,IAAII,KAAK,KAAK,YAAY,EAAE;QAC1BE,SAAS,GAAGA,SAAS,CAACC,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;UACzC,IAAID,CAAC,CAAChB,EAAE,GAAGiB,CAAC,CAACjB,EAAE,EAAE,OAAO,CAAC;UACzB,IAAIgB,CAAC,CAAChB,EAAE,GAAGiB,CAAC,CAACjB,EAAE,EAAE,OAAO,CAAC,CAAC;UAC1B,OAAO,CAAC;QACV,CAAC,CAAC;MACJ;MACA,IAAIY,KAAK,KAAK,aAAa,EAAE;QAC3BE,SAAS,GAAGA,SAAS,CAACC,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;UACzC,OAAOA,CAAC,CAACjB,EAAE,GAAGgB,CAAC,CAAChB,EAAE;QACpB,CAAC,CAAC;MACJ;MAEAI,QAAQ,CAAC;QACPH,IAAI,EAAEiB,eAAe;QACrBhB,OAAO,EAAEY;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,MAAM,CAACC,KAAK,CAAC,6BAA6B,CAAC;IAC7C;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}